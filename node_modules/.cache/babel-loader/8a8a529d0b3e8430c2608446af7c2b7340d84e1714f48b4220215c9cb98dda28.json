{"ast":null,"code":"var _jsxFileName = \"/Users/courtneydunn/Desktop/fresh/basketball-app-client/src/components/PlayerList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getPlayers, deletePlayer } from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlayerList = () => {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchPlayers = async () => {\n      try {\n        const response = await getPlayers();\n        console.log('API response:', response);\n        if (!!response) setPlayers(response);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching players:', error);\n        setIsLoading(false);\n      }\n    };\n    fetchPlayers();\n  }, []);\n  const handleDelete = async id => {\n    try {\n      await deletePlayer(id);\n      setPlayers(players.filter(player => player._id !== id));\n    } catch (error) {\n      console.error('Error deleting player:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Player List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [players && players.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: players.map(player => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [player.name, \" - \", player.tencelStr, \" - \", player.gauge, \" - \", player.knotType, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(player._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/players/${player._id}/edit`,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 19\n          }, this)]\n        }, player._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No players available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/players/add\",\n        children: \"Add Line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayerList, \"qKNgqgeS0uStEYVlebAH7fHJ/DA=\");\n_c = PlayerList;\nexport default PlayerList;\nvar _c;\n$RefreshReg$(_c, \"PlayerList\");","map":{"version":3,"names":["React","useState","useEffect","Link","getPlayers","deletePlayer","jsxDEV","_jsxDEV","Fragment","_Fragment","PlayerList","_s","players","setPlayers","isLoading","setIsLoading","fetchPlayers","response","console","log","error","handleDelete","id","filter","player","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","name","tencelStr","gauge","knotType","onClick","to","_c","$RefreshReg$"],"sources":["/Users/courtneydunn/Desktop/fresh/basketball-app-client/src/components/PlayerList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getPlayers, deletePlayer } from '../api/api';\n\nconst PlayerList = () => {\n  const [players, setPlayers] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchPlayers = async () => {\n      try {\n        const response = await getPlayers();\n        console.log('API response:', response);\n        if (!!response)\n        setPlayers(response);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching players:', error);\n        setIsLoading(false);\n      }\n    };\n\n    fetchPlayers();\n  }, []);\n\n  const handleDelete = async (id) => {\n    try {\n      await deletePlayer(id);\n      setPlayers(players.filter((player) => player._id !== id));\n    } catch (error) {\n      console.error('Error deleting player:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Player List</h2>\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : (\n        <>\n          {players && players.length > 0 ? (\n            <ul>\n              {players.map((player) => (\n                <li key={player._id}>\n                  {player.name} - {player.tencelStr} - {player.gauge} - {player.knotType}\n                  <button onClick={() => handleDelete(player._id)}>Delete</button>\n                  <Link to={`/players/${player._id}/edit`}>Edit</Link>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p>No players available.</p>\n          )}\n          <Link to=\"/players/add\">Add Line</Link>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default PlayerList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}